            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Below acceptable range\n";
        } else if (average <= 300) {
            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Within acceptable range\n";
        } else {
            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Above acceptable range\n";
        }
    }
Syntax Error: Incorrect return type for main

Description: The main function was incorrectly defined to return a float type.
Correction: Changed float main() to int main().
Syntax Error: Incorrect variable types for loop counters

Description: Loop counters i and j were defined as char instead of int.
Correction: Changed char i, j; to int i, j;.
Logical Error: Incorrect variable usage in inner loop

Description: The variable readingValue was incorrectly used as reading in the inner loop.
Correction: Changed cin >> reading; to cin >> readingValue;.

#include <iostream>
#include <iomanip>

using namespace std;

const int NUM_EXPERIMENTS = 3;
const int NUM_READINGS = 3;

int main() {
    int i, j;
    double readingValue, total, average;

    for (i = 1; i <= NUM_EXPERIMENTS; i++) {
        total = 0;
        cout << "\nEXPERIMENT " << i << endl;
        cout << "============\n";

        for (j = 1; j <= NUM_READINGS; j++) {
            cout << "Enter reading " << j << " value: ";
            cin >> readingValue;
            total += readingValue;
        }

        average = total / NUM_READINGS;

        // Incorporate evaluation logic directly
        if (average < 100) {
            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Below acceptable range\n";
        } else if (average <= 300) {
            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Within acceptable range\n";
        } else {
            cout << "Experiment " << i << " average: "
                 << fixed << setprecision(2) << average
                 << " is Above acceptable range\n";
        }
    }

    return 0;
}
